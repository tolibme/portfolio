name: Build and Deploy Portfolio

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        env:
          IMAGE_NAME: ghcr.io/${{ github.repository }}:latest
        run: |
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VM_KEY }}

      - name: Deploy to server
        env:
          IMAGE_NAME: ghcr.io/${{ github.repository }}:latest
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} << EOF
            # Navigate to project directory
            cd ~/portfolio || { echo "Portfolio directory not found"; exit 1; }
            
            # Pull latest changes
            git pull origin main
            
            # Stop existing containers
            docker-compose down || true
            
            # Login and pull new image
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker pull ${IMAGE_NAME}
            
            # Start with new image
            PORTFOLIO_IMAGE=${IMAGE_NAME} docker-compose -f docker-compose.prod.yml up -d
            
            # Clean up and show status
            docker image prune -f
            docker ps
          EOF

      - name: Health check
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} << 'EOF'
            sleep 20
            
            if docker ps | grep -q "portfolio"; then
              echo "✅ Container is running"
              if curl -f http://localhost > /dev/null 2>&1; then
                echo "✅ Application is responding"
              else
                echo "❌ Application not responding"
                docker logs $(docker ps -q --filter "name=portfolio") | tail -20
                exit 1
              fi
            else
              echo "❌ Container not running"
              docker ps -a | grep portfolio || echo "No portfolio container found"
              exit 1
            fi
          EOF
